<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="No.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TransectionID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TransectionName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="screenName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="userName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yA1OHgAAAABJRU5ErkJggg==
</value>
  </data>
</root>