//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EF : DbContext
    {
        public EF()
            : base("name=EF")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Main_CheckLogin_Result> Main_CheckLogin(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_CheckLogin_Result>("Main_CheckLogin", userNameParameter);
        }
    
        public virtual ObjectResult<Main_Get_TransectionError_Result> Main_Get_TransectionError(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Main_Get_TransectionError_Result>("Main_Get_TransectionError", dateFromParameter, dateToParameter);
        }
    
        public virtual int Main_Log_TransectionError(string errorName, string screenName, string userName)
        {
            var errorNameParameter = errorName != null ?
                new ObjectParameter("ErrorName", errorName) :
                new ObjectParameter("ErrorName", typeof(string));
    
            var screenNameParameter = screenName != null ?
                new ObjectParameter("ScreenName", screenName) :
                new ObjectParameter("ScreenName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Main_Log_TransectionError", errorNameParameter, screenNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Company_GetCompany_Result> Company_GetCompany(string companyName)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Company_GetCompany_Result>("Company_GetCompany", companyNameParameter);
        }
    
        public virtual int Company_DelCompany(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Company_DelCompany", iDParameter);
        }
    
        public virtual int Company_AddCompany(string companyname, string phone, string address)
        {
            var companynameParameter = companyname != null ?
                new ObjectParameter("Companyname", companyname) :
                new ObjectParameter("Companyname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Company_AddCompany", companynameParameter, phoneParameter, addressParameter);
        }
    
        public virtual int Company_EditCompany(Nullable<int> iD, string companyname, string phone, string address)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("Companyname", companyname) :
                new ObjectParameter("Companyname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Company_EditCompany", iDParameter, companynameParameter, phoneParameter, addressParameter);
        }
    
        public virtual ObjectResult<Product_GetProductAll_Result> Product_GetProductAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductAll_Result>("Product_GetProductAll");
        }
    
        public virtual ObjectResult<Product_GetProductName_Result> Product_GetProductName(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductName_Result>("Product_GetProductName", productNameParameter);
        }
    
        public virtual ObjectResult<Product_GetProductTime_Result> Product_GetProductTime(Nullable<System.DateTime> timein, Nullable<System.DateTime> timeout)
        {
            var timeinParameter = timein.HasValue ?
                new ObjectParameter("Timein", timein) :
                new ObjectParameter("Timein", typeof(System.DateTime));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("Timeout", timeout) :
                new ObjectParameter("Timeout", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductTime_Result>("Product_GetProductTime", timeinParameter, timeoutParameter);
        }
    
        public virtual int Product_DelProduct(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_DelProduct", iDParameter);
        }
    
        public virtual int Product_EditProduct(Nullable<int> iD, string productName, Nullable<decimal> weight, Nullable<int> type, Nullable<System.DateTime> timeIn, Nullable<System.DateTime> timeOut)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var timeInParameter = timeIn.HasValue ?
                new ObjectParameter("TimeIn", timeIn) :
                new ObjectParameter("TimeIn", typeof(System.DateTime));
    
            var timeOutParameter = timeOut.HasValue ?
                new ObjectParameter("TimeOut", timeOut) :
                new ObjectParameter("TimeOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_EditProduct", iDParameter, productNameParameter, weightParameter, typeParameter, timeInParameter, timeOutParameter);
        }
    
        public virtual int Product_AddProduct(string productName, Nullable<decimal> weight, Nullable<int> type, Nullable<int> comID, Nullable<System.DateTime> timeIn, Nullable<System.DateTime> timeOut)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var comIDParameter = comID.HasValue ?
                new ObjectParameter("ComID", comID) :
                new ObjectParameter("ComID", typeof(int));
    
            var timeInParameter = timeIn.HasValue ?
                new ObjectParameter("TimeIn", timeIn) :
                new ObjectParameter("TimeIn", typeof(System.DateTime));
    
            var timeOutParameter = timeOut.HasValue ?
                new ObjectParameter("TimeOut", timeOut) :
                new ObjectParameter("TimeOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_AddProduct", productNameParameter, weightParameter, typeParameter, comIDParameter, timeInParameter, timeOutParameter);
        }
    
        public virtual ObjectResult<Employee_GetEmpName_Result> Employee_GetEmpName(string empName)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_GetEmpName_Result>("Employee_GetEmpName", empNameParameter);
        }
    
        public virtual int Emploee_DelEmp(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emploee_DelEmp", iDParameter);
        }
    
        public virtual int Emploee_EditEmp(Nullable<int> iD, string fname, string lname, Nullable<int> age, string address, string permistion, string username, string pass)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var permistionParameter = permistion != null ?
                new ObjectParameter("Permistion", permistion) :
                new ObjectParameter("Permistion", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Emploee_EditEmp", iDParameter, fnameParameter, lnameParameter, ageParameter, addressParameter, permistionParameter, usernameParameter, passParameter);
        }
    }
}
